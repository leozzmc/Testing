name: Publish

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .

    - name: Run Test
      env:
        GITHUB_ORG: ${{ secrets.GH_ORG }}
        GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
      run: |
        pytest tests/

  publish:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.ADMIN_GITHUB_TOKEN }}

    - name: Python Semantic Release
      uses: relekang/python-semantic-release@master
      with:
        github_token: ${{ secrets.ADMIN_GITHUB_TOKEN }}
        pypi_token: ${{ secrets.PYPI_PASSWORD }}
        
  docs:
    name: Deploy docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
        
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: setup workspace
        run: |
          pip install -r requirements-docs.txt
          echo docs.openpecha.org > "${GITHUB_WORKSPACE}/docs/docs/CNAME"
          remote_repo="https://x-access-token:${GITHUB_TOKEN}@${GITHUB_DOMAIN:-"github.com"}/${GITHUB_REPOSITORY}.git"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.${GITHUB_DOMAIN:-"github.com"}"
          git remote rm origin
          git remote add origin "${remote_repo}"
          
      - name: deploy
        run: |
          cd docs
          mkdocs gh-deploy --force
          
